{"ast":null,"code":"import _objectSpread from \"/Users/es97/Desktop/CPSC 436I/Assignment/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from \"redux\";\nimport { SHOW_DETAIL, CLOSE_DETAIL, GET_MESSAGE_SUCCESS, DELETE_ALL_MESSAGES_SUCCESS, DELETE_SINGLE_MESSAGES_SUCCESS } from \"../actions/index\";\nimport { ADD_MESSAGE_SUCCESS, ADD_MESSAGE_FAILURE } from \"../actions/index\"; // let initialIndex= 1;\n// function addMessage(message, index, detail=\"\"){\n// \tif(index === undefined){\n// \t\tindex = ++initialIndex\n// \t}`\n// \treturn {\n// \t\tmessage: message,\n// \t\tindex: index,\n// \t\tdetail: detail\n// \t}\n// }\n// function initilize(){\n// \tlet messageObj =JSON.parse(initialMessage);\n// \tlet messageList = {};\n//     for (let i=0; i< messageObj.length; i++){\n// \t\tlet message = addMessage(messageObj[i]);\n//         messageList[message.index] = message;\n// \t}\n// \treturn messageList;\n// }\n// const initialList = initilize();\n\nconst initialState = {\n  messages: [],\n  detail: \"\",\n  showDetail: false\n};\nexport default function todosReducer(state = initialState, action) {\n  switch (action.type) {\n    //   case ADD_MESSAGE_STARTED:\n    // \treturn {\n    // \t  ...state,\n    // \t  loading: true\n    // \t  messages:action.response\n    // \t};\n    case GET_MESSAGE_SUCCESS:\n      return _objectSpread({}, state, {\n        messages: action.response\n      });\n\n    case ADD_MESSAGE_SUCCESS:\n      return _objectSpread({}, state, {\n        messages: state.messages.concat(action.message)\n      });\n\n    case ADD_MESSAGE_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload.error\n      });\n\n    case DELETE_ALL_MESSAGES_SUCCESS:\n      return _objectSpread({}, state, {\n        messages: []\n      });\n\n    case DELETE_SINGLE_MESSAGES_SUCCESS:\n      const newMessages = state.mana;\n      return _objectSpread({}, state, {\n        messages: []\n      });\n\n    case SHOW_DETAIL:\n      return _objectSpread({}, state, {\n        detail: action.message,\n        showDetail: true\n      });\n\n    case CLOSE_DETAIL:\n      return _objectSpread({}, state, {\n        detail: 'close detail',\n        showDetail: false\n      });\n\n    default:\n      return state;\n  }\n} //   const listReducer = (list = initialState, action) => {\n// \t\tswitch(action.type){\n// \t\t\tcase(ADD_MESSAGE):\n// \t\t\t\tlet message = addMessage(action.message,undefined,action.detail);\n// \t\t\treturn {...list,[message.index]:message};\n// \t\t \tdefault:\n// \t\t\t\treturn list;\n// \t\t}\n// \t};\n// const listReducer = (list = initialList, action) => {\n// \tswitch(action.type){\n// \t\tcase(ADD_MESSAGE):\n// \t\t\tlet message = addMessage(action.message,undefined,action.detail);\n// \t\treturn {...list,[message.index]:message};\n// \t \tdefault:\n// \t\t\treturn list;\n// \t}\n// };\n// const elReducer = (el={showDetail: false, message:\"Something is wrong\", detail: \"you have no detail\"}, action) =>{\n// \tif(action.type === SHOW_DETAIL){\n// \t\treturn {showDetail:true, message: action.message, detail: action.detail }\n// \t}else if(action.type === CLOSE_DETAIL){\n// \t\treturn {showDetail: false, message:\"Something is wrong\", detail: \"you have no detail\"};\n// \t}\n// \treturn el;\n// }\n// export default combineReducers({\n// \tlist: listReducer,\n// \tel: elReducer\n// // anotherKey: anotherReducer //all your reducers should be combined\n// });","map":{"version":3,"sources":["/Users/es97/Desktop/CPSC 436I/Assignment/client/src/reducers/index.js"],"names":["combineReducers","SHOW_DETAIL","CLOSE_DETAIL","GET_MESSAGE_SUCCESS","DELETE_ALL_MESSAGES_SUCCESS","DELETE_SINGLE_MESSAGES_SUCCESS","ADD_MESSAGE_SUCCESS","ADD_MESSAGE_FAILURE","initialState","messages","detail","showDetail","todosReducer","state","action","type","response","concat","message","error","payload","newMessages","mana"],"mappings":";AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAAQC,WAAR,EAAqBC,YAArB,EAAmCC,mBAAnC,EAAwDC,2BAAxD,EAAoFC,8BAApF,QAAyH,kBAAzH;AACA,SAAQC,mBAAR,EAA6BC,mBAA7B,QAAuD,kBAAvD,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,UAAU,EAAC;AAHS,CAArB;AAMA,eAAe,SAASC,YAAT,CAAsBC,KAAK,GAAGL,YAA9B,EAA4CM,MAA5C,EAAoD;AAClE,UAAQA,MAAM,CAACC,IAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAKZ,mBAAL;AACC,+BACIU,KADJ;AAECJ,QAAAA,QAAQ,EAACK,MAAM,CAACE;AAFjB;;AAID,SAAKV,mBAAL;AACA,+BACIO,KADJ;AAECJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeQ,MAAf,CAAsBH,MAAM,CAACI,OAA7B;AAFX;;AAIA,SAAKX,mBAAL;AACA,+BACIM,KADJ;AAECM,QAAAA,KAAK,EAAEL,MAAM,CAACM,OAAP,CAAeD;AAFvB;;AAIA,SAAKf,2BAAL;AACA,+BACIS,KADJ;AAECJ,QAAAA,QAAQ,EAAC;AAFV;;AAIA,SAAKJ,8BAAL;AACC,YAAMgB,WAAW,GAAGR,KAAK,CAACS,IAA1B;AACD,+BACIT,KADJ;AAECJ,QAAAA,QAAQ,EAAC;AAFV;;AAIA,SAAKR,WAAL;AACC,+BACIY,KADJ;AAECH,QAAAA,MAAM,EAAEI,MAAM,CAACI,OAFhB;AAGCP,QAAAA,UAAU,EAAC;AAHZ;;AAKD,SAAKT,YAAL;AACA,+BACIW,KADJ;AAECH,QAAAA,MAAM,EAAE,cAFT;AAGCC,QAAAA,UAAU,EAAC;AAHZ;;AAKA;AACA,aAAOE,KAAP;AA9CA;AAgDE,C,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers } from \"redux\";\nimport {SHOW_DETAIL, CLOSE_DETAIL, GET_MESSAGE_SUCCESS, DELETE_ALL_MESSAGES_SUCCESS,DELETE_SINGLE_MESSAGES_SUCCESS} from \"../actions/index\"\nimport {ADD_MESSAGE_SUCCESS, ADD_MESSAGE_FAILURE} from \"../actions/index\"\n\n// let initialIndex= 1;\n// function addMessage(message, index, detail=\"\"){\n// \tif(index === undefined){\n// \t\tindex = ++initialIndex\n// \t}`\n// \treturn {\n// \t\tmessage: message,\n// \t\tindex: index,\n// \t\tdetail: detail\n// \t}\n// }\n\n// function initilize(){\n// \tlet messageObj =JSON.parse(initialMessage);\n// \tlet messageList = {};\n//     for (let i=0; i< messageObj.length; i++){\n// \t\tlet message = addMessage(messageObj[i]);\n//         messageList[message.index] = message;\n// \t}\n// \treturn messageList;\n// }\n\n// const initialList = initilize();\n\nconst initialState = {\n\tmessages: [],\n\tdetail: \"\",\n\tshowDetail:false\n  };\n\nexport default function todosReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t//   case ADD_MESSAGE_STARTED:\n\t// \treturn {\n\t// \t  ...state,\n\t// \t  loading: true\n\t// \t  messages:action.response\n\t// \t};\n\tcase GET_MESSAGE_SUCCESS:\n\t\treturn{\n\t\t\t...state,\n\t\t\tmessages:action.response\n\t\t};\n\tcase ADD_MESSAGE_SUCCESS:\n\treturn {\n\t\t...state,\n\t\tmessages: state.messages.concat(action.message)\n\t};\n\tcase ADD_MESSAGE_FAILURE:\n\treturn {\n\t\t...state,\n\t\terror: action.payload.error\n\t};\n\tcase DELETE_ALL_MESSAGES_SUCCESS:\n\treturn {\n\t\t...state,\n\t\tmessages:[]\n\t};\n\tcase DELETE_SINGLE_MESSAGES_SUCCESS:\n\t\tconst newMessages = state.mana\n\treturn {\n\t\t...state,\n\t\tmessages:[]\n\t};\n\tcase SHOW_DETAIL:\n\t\treturn {\n\t\t\t...state,\n\t\t\tdetail: action.message,\n\t\t\tshowDetail:true\n\t\t};\n\tcase CLOSE_DETAIL:\n\treturn {\n\t\t...state,\n\t\tdetail: 'close detail',\n\t\tshowDetail:false\n\t};\n\tdefault:\n\treturn state;\n\t}\n  }\n\n//   const listReducer = (list = initialState, action) => {\n// \t\tswitch(action.type){\n// \t\t\tcase(ADD_MESSAGE):\n// \t\t\t\tlet message = addMessage(action.message,undefined,action.detail);\n// \t\t\treturn {...list,[message.index]:message};\n// \t\t \tdefault:\n// \t\t\t\treturn list;\n// \t\t}\n// \t};\n\n\n// const listReducer = (list = initialList, action) => {\n// \tswitch(action.type){\n// \t\tcase(ADD_MESSAGE):\n// \t\t\tlet message = addMessage(action.message,undefined,action.detail);\n// \t\treturn {...list,[message.index]:message};\n// \t \tdefault:\n// \t\t\treturn list;\n// \t}\n// };\n\n// const elReducer = (el={showDetail: false, message:\"Something is wrong\", detail: \"you have no detail\"}, action) =>{\n// \tif(action.type === SHOW_DETAIL){\n// \t\treturn {showDetail:true, message: action.message, detail: action.detail }\n// \t}else if(action.type === CLOSE_DETAIL){\n// \t\treturn {showDetail: false, message:\"Something is wrong\", detail: \"you have no detail\"};\n// \t}\n// \treturn el;\n// }\n\n// export default combineReducers({\n// \tlist: listReducer,\n// \tel: elReducer\n// // anotherKey: anotherReducer //all your reducers should be combined\n// });\n\n"]},"metadata":{},"sourceType":"module"}
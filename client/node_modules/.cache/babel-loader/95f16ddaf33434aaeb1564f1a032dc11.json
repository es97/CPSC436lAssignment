{"ast":null,"code":"var _jsxFileName = \"/Users/es97/Desktop/CPSC 436I/Assignment/client/src/components/MessageList.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMessages, showDetail, deleteSingle, addMessage, closeDetail, deleteAllMessages } from \"../actions/index\";\nimport \"./style.css\";\n\nclass MessageList extends React.Component {\n  constructor() {\n    super();\n\n    this.submit = () => {\n      // this.props.addMessage(this.inputMessage.current.value, this.inputDetail.current.value)\n      this.props.addMessage(this.inputMessage.current.value);\n      this.setState({\n        messageToAdd: \"\"\n      });\n      this.inputMessage.current.value = \"\";\n      this.inputDetail.current.value = \"\";\n    };\n\n    this.inputMessage = React.createRef();\n    this.inputDetail = React.createRef();\n    this.state = {\n      list: [],\n      messageToAdd: \"\",\n      index: this.getRandomInt(1, 1000)\n    };\n  }\n\n  getRandomInt(bottom, top) {\n    return Math.floor(Math.random() * (1 + top - bottom)) + bottom;\n  } // MessageText(message, detail){\n  //   return <li onClick={() => this.props.showDetail(message, detail)} className=\"fullMessage\">{message}</li>\n  // }\n\n\n  MessageText(message) {\n    return React.createElement(\"li\", {\n      onClick: () => this.props.deleteSingle(message.id),\n      className: \"fullMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, message.message);\n  } // MessageText(message){\n  //   return <li onClick={() => this.props.showDetail(message.message)} className=\"fullMessage\">{message.message}</li>\n  // }\n\n\n  componentDidMount() {\n    this.props.fetchMessages();\n  }\n\n  render() {\n    const list = Object.values(this.props.list).map(message => React.createElement(\"ul\", {\n      key: message.id,\n      id: \"messagesList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.MessageText(message)));\n    const details = React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Details View\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Details: \", this.props.message), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: () => this.props.closeDetail(),\n      value: \"Close\",\n      className: \"button_close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Messages want to add\")), React.createElement(\"textarea\", {\n      ref: this.inputMessage,\n      type: \"text\",\n      rows: \"8\",\n      cols: \"80\",\n      id: \"messagebox\",\n      name: \"message\",\n      placeholder: \"Enter message here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Details want to add\")), React.createElement(\"textarea\", {\n      ref: this.inputDetail,\n      type: \"text\",\n      rows: \"4\",\n      cols: \"80\",\n      id: \"deatailbox\",\n      name: \"detail\",\n      placeholder: \"Enter details here...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Add\",\n      id: \"addButton\",\n      onClick: this.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"message-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.showDetail ? details : list), React.createElement(\"input\", {\n      type: \"button\",\n      onClick: () => this.props.deleteAllMessages(),\n      value: \"Delete All Messages\",\n      className: \"button_close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  // return {list: state.list, el: state.el}\n  return {\n    list: state.messages,\n    showDetail: state.showDetail\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  // addMessage,showDetail,closeDetail\n  return {\n    fetchMessages: () => dispatch(fetchMessages()),\n    addMessage: message => dispatch(addMessage(message)),\n    closeDetail: () => dispatch(closeDetail('')),\n    deleteAllMessages: () => dispatch(deleteAllMessages()),\n    deleteSingle: id => dispatch(deleteSingle(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageList);","map":{"version":3,"sources":["/Users/es97/Desktop/CPSC 436I/Assignment/client/src/components/MessageList.js"],"names":["React","connect","fetchMessages","showDetail","deleteSingle","addMessage","closeDetail","deleteAllMessages","MessageList","Component","constructor","submit","props","inputMessage","current","value","setState","messageToAdd","inputDetail","createRef","state","list","index","getRandomInt","bottom","top","Math","floor","random","MessageText","message","id","componentDidMount","render","Object","values","map","details","mapStateToProps","messages","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {fetchMessages,showDetail,deleteSingle,addMessage,closeDetail,deleteAllMessages} from \"../actions/index\"\nimport \"./style.css\"\n\nclass MessageList extends React.Component {\n  constructor(){\n    super();\n    this.inputMessage = React.createRef();\n    this.inputDetail = React.createRef();\n    this.state = {\n      list: [],\n      messageToAdd:\"\",\n      index:this.getRandomInt(1,1000)\n    };\n  }\n\n  getRandomInt(bottom, top) {\n    return Math.floor( Math.random() * ( 1 + top - bottom ) ) + bottom;\n  }\n\n  // MessageText(message, detail){\n  //   return <li onClick={() => this.props.showDetail(message, detail)} className=\"fullMessage\">{message}</li>\n  // }\n  MessageText(message){\n    return <li onClick={() => this.props.deleteSingle(message.id)} className=\"fullMessage\">{message.message}</li>\n  }\n\n  // MessageText(message){\n  //   return <li onClick={() => this.props.showDetail(message.message)} className=\"fullMessage\">{message.message}</li>\n  // }\n  submit= () =>{\n    // this.props.addMessage(this.inputMessage.current.value, this.inputDetail.current.value)\n    this.props.addMessage(this.inputMessage.current.value)\n    this.setState({messageToAdd:\"\"})\n    this.inputMessage.current.value =\"\";\n    this.inputDetail.current.value =\"\";\n  }\n\n  componentDidMount() {\n    this.props.fetchMessages();\n  }\n\n\trender() {\n      const list = Object.values(this.props.list).map((message) =>\n      <ul key= {message.id} id=\"messagesList\">\n        {this.MessageText(message)}\n      </ul>\n      );\n      const details =\n        <div className=\"container center\">\n        <h3>Details View</h3>\n        {/* <h4>Details: {this.props.el.detail}</h4> */}\n        <h4>Details: {this.props.message}</h4>\n        <input type=\"button\" onClick={() => this.props.closeDetail()} value=\"Close\" className=\"button_close\"></input>\n        </div>\n      return(\n        <div className=\"container\">\n          <h4><strong>Messages want to add</strong></h4>\n          <textarea ref={this.inputMessage} type=\"text\"rows=\"8\" cols=\"80\" id=\"messagebox\" name=\"message\"\n          placeholder=\"Enter message here...\"></textarea><br></br>\n          <h4><strong>Details want to add</strong></h4>\n          <textarea ref={this.inputDetail} type=\"text\"rows=\"4\" cols=\"80\" id=\"deatailbox\" name=\"detail\"\n          placeholder=\"Enter details here...\"></textarea><br></br>\n          <br></br><input type=\"button\" value=\"Add\" id=\"addButton\" onClick={this.submit}></input><br></br><br></br>\n          <div className=\"message-list\">\n            {/* {this.props.el.showDetail? details : list} */}\n            {this.props.showDetail? details : list}\n          </div>\n          <input type=\"button\" onClick={() => this.props.deleteAllMessages()} value=\"Delete All Messages\" className=\"button_close\"></input>\n        </div>\n      );\n\t}\n}\n\n\nconst mapStateToProps = (state) => {\n  // return {list: state.list, el: state.el}\n  return{\n    list:state.messages,\n    showDetail:state.showDetail\n  }\n};\n\nconst mapDispatchToProps =  dispatch => {\n  // addMessage,showDetail,closeDetail\n  return {\n    fetchMessages:() => dispatch(fetchMessages()),\n    addMessage: (message) => dispatch(addMessage(message)),\n    closeDetail:() => dispatch(closeDetail('')),\n    deleteAllMessages:() => dispatch(deleteAllMessages()),\n    deleteSingle:(id) => dispatch(deleteSingle(id))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageList);"]},"metadata":{},"sourceType":"module"}